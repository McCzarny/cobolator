IDENTIFICATION DIVISION.
   PROGRAM-ID. PARSECONFIG.
   ENVIRONMENT DIVISION.
   INPUT-OUTPUT SECTION.
  *************************PARSECONFIG
   FILE-CONTROL.
       SELECT  XMLDATA       ASSIGN TO .
 DATA DIVISION.
   FILE SECTION.
  *=================================================================
  XMLFILE FD  XMLDATA
       RECORDING MODE IS F
       LABEL RECORD STANDARD
       DATA RECORD IS XMLREC.
   01  XMLREC   PIC X(80).
 WORKING-STORAGE SECTION.
  ******************************************************************
  * XML DOCUMENT, ENCODED AS INITIAL VALUES OF DATA ITEMS.         *
  ******************************************************************
   01 NOT-EOF                   PIC X(01)      VALUE 'N'.
   01 I-FROM                    PIC S9(4)   COMP VALUE 0.
   01 XML-STRING                PIC X(1000) VALUE SPACES.
   01 EZ-PTR                    PIC S9(4) COMP VALUE 1.
  ******************************************************************

  ******************************************************************
  * SAMPLE DATA DEFINITIONS FOR PROCESSING NUMERIC XML CONTENT.    *
  ******************************************************************

     1 CURRENT-ELEMENT PIC X(30).
     1 LIST-PRICE COMPUTATIONAL PIC 9V99 VALUE 0.
     1 DISCOUNT COMPUTATIONAL PIC 9V99 VALUE 0.
     1 DISPLAY-PRICE PIC $$9.99.
   
 PROCEDURE DIVISION.
    MAINLINE SECTION.
       PERFORM READ-XML-FILE
       DISPLAY 'XML-DOCUMENT=' XML-STRING(1:EZ-PTR)
       XML PARSE XML-STRING(1:EZ-PTR)
                          PROCESSING PROCEDURE XML-HANDLER
         ON EXCEPTION
           DISPLAY 'XML DOCUMENT ERROR ' XML-CODE
         NOT ON EXCEPTION
           DISPLAY 'XML DOCUMENT SUCCESSFULLY PARSED'
       END-XML

  ******************************************************************
  *    PROCESS THE TRANSFORMED CONTENT AND CALCULATE PROMO PRICE.  *
  ******************************************************************

       DISPLAY ' '
       DISPLAY '-----+++++***** USING INFORMATION FROM XML '
           '*****+++++-----'
       DISPLAY ' '
       MOVE LIST-PRICE TO DISPLAY-PRICE
       DISPLAY '  SANDWICH LIST PRICE: ' DISPLAY-PRICE
       COMPUTE DISPLAY-PRICE = LIST-PRICE * (1 - DISCOUNT)
       DISPLAY '  PROMOTIONAL PRICE:   ' DISPLAY-PRICE
       DISPLAY '  GET ONE TODAY!'
       GOBACK.

    MAINLINE-EXIT. EXIT.

  READ-XML-FILE  SECTION.

       OPEN INPUT XMLDATA
       PERFORM UNTIL NOT-EOF = 'Y'
            READ XMLDATA
              AT END MOVE 'Y' TO NOT-EOF
            END-READ
            IF NOT-EOF = 'N' THEN
              PERFORM VARYING I-FROM
                     FROM 72
                       BY -1
                    UNTIL XMLREC(I-FROM:1) NOT = ' '
              END-PERFORM

              STRING XMLREC(1:I-FROM) DELIMITED BY SIZE
                INTO XML-STRING
                WITH POINTER EZ-PTR
              END-STRING

              DISPLAY 'EZ-PTR=' EZ-PTR
            END-IF
       END-PERFORM
       CLOSE XMLDATA
       .

   READ-XML-FILE-EXIT. EXIT.

   XML-HANDLER SECTION.
       DISPLAY 'XML-EVENT=' XML-EVENT
       EVALUATE XML-EVENT

  * ==> ORDER XML EVENTS MOST FREQUENT FIRST
         WHEN 'START-OF-ELEMENT'
           DISPLAY 'START ELEMENT TAG: <' XML-TEXT '>'
           MOVE XML-TEXT TO CURRENT-ELEMENT
         WHEN 'CONTENT-CHARACTERS'
           DISPLAY 'CONTENT CHARACTERS: <' XML-TEXT '>'

  * ==> TRANSFORM XML CONTENT TO OPERATIONAL COBOL DATA ITEM...
           EVALUATE CURRENT-ELEMENT
             WHEN 'LISTPRICE'

  * ==> USING FUNCTION NUMVAL-C...
               COMPUTE LIST-PRICE = FUNCTION NUMVAL-C(XML-TEXT)
             WHEN 'DISCOUNT'
               COMPUTE DISCOUNT = FUNCTION NUMVAL-C(XML-TEXT)
           END-EVALUATE
         WHEN 'END-OF-ELEMENT'
           DISPLAY 'END ELEMENT TAG: <' XML-TEXT '>'
           MOVE SPACES TO CURRENT-ELEMENT
         WHEN 'START-OF-DOCUMENT'
           COMPUTE XML-DOCUMENT-LENGTH = FUNCTION LENGTH(XML-TEXT)
           DISPLAY 'START OF DOCUMENT: LENGTH=' XML-DOCUMENT-LENGTH
               ' CHARACTERS.'
         WHEN 'END-OF-DOCUMENT'
           DISPLAY 'END OF DOCUMENT.'
         WHEN 'VERSION-INFORMATION'
           DISPLAY 'VERSION: <' XML-TEXT '>'
         WHEN 'ENCODING-DECLARATION'
           DISPLAY 'ENCODING: <' XML-TEXT '>'
         WHEN 'STANDALONE-DECLARATION'
           DISPLAY 'STANDALONE: <' XML-TEXT '>'
         WHEN 'ATTRIBUTE-NAME'
           DISPLAY 'ATTRIBUTE NAME: <' XML-TEXT '>'
         WHEN 'ATTRIBUTE-CHARACTERS'
           DISPLAY 'ATTRIBUTE VALUE CHARACTERS: <' XML-TEXT '>'
         WHEN 'ATTRIBUTE-CHARACTER'
           DISPLAY 'ATTRIBUTE VALUE CHARACTER: <' XML-TEXT '>'
         WHEN 'START-OF-CDATA-SECTION'
           DISPLAY 'START OF CDATA: <' XML-TEXT '>'
         WHEN 'END-OF-CDATA-SECTION'
           DISPLAY 'END OF CDATA: <' XML-TEXT '>'
         WHEN 'CONTENT-CHARACTER'
           DISPLAY 'CONTENT CHARACTER: <' XML-TEXT '>'
         WHEN 'PROCESSING-INSTRUCTION-TARGET'
           DISPLAY 'PI TARGET: <' XML-TEXT '>'
         WHEN 'PROCESSING-INSTRUCTION-DATA'
           DISPLAY 'PI DATA: <' XML-TEXT '>'
         WHEN 'COMMENT'
           DISPLAY 'COMMENT: <' XML-TEXT '>'
         WHEN 'EXCEPTION'
  *         COMPUTE XML-DOCUMENT-LENGTH = FUNCTION LENGTH (XML-TEXT)
           DISPLAY 'EXCEPTION ' XML-CODE ' AT OFFSET '
               EZ-PTR '.'
           MOVE -1 TO XML-CODE
           MOVE 16 TO RETURN-CODE
         WHEN OTHER
           DISPLAY 'UNEXPECTED XML EVENT: ' XML-EVENT '.'
       END-EVALUATE
       .

   XML-HANDLER-EXIT. EXIT.                               
